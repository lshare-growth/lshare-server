# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "be-deploy" ]

permissions:
  contents: read

jobs:
  job1:
    name: 1. Build jar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Checkout to current branch
        uses: actions/checkout@v3
      - name: Install JDK11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: yml overwrite
        working-directory: ./src/main/resources
        run: |
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_YML_PROD }}" > ./application-prod.yml

      - name: Build with Gradle
        run: ./gradlew bootjar --warning-mode all
      - uses: actions/upload-artifact@v3
        with:
          name: jar_file
          path: ./build/libs
  job2:
    needs: job1
    name: 2. Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to current branch
        uses: actions/checkout@v3

      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: jar_file
          path: ./build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: devjun1023/lshare:latest
          context: ./
